version: "3"
services:
  mongo-db:
    image: mvertes/alpine-mongo
    ports:
      - "27018:27017"
    container_name: mongo-db
    volumes:
      - ./db/:/data/db
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  # rabbitmq:
  #   image: rabbitmq:alpine
  #   container_name: rabbitmq
  #   ports:
  #     - "5672:5672"

  product:
    build:
      dockerfile: Dockerfile
      context: ./product
    container_name: product
    ports:
      - "8002:8002"
    restart: always
    # depends_on:
    #   - "mongo-db"
    #   # - "rabbitmq"
    depends_on:
      mongo-db:
        condition: service_healthy
    volumes:
      - .:/app
      - /app/product/node_modules
    # env_file:
    #   - ./product/.env.dev

  shopping:
    build:
      dockerfile: Dockerfile
      context: ./shopping
    container_name: shopping
    ports:
      - "8003:8003"
    restart: always
    # depends_on:
    #   - "mongo-db"
    #   # - "rabbitmq"
    depends_on:
      mongo-db:
        condition: service_healthy
    volumes:
      - .:/app
      - /app/shopping/node_modules
    # env_file:
    #   - ./shopping/.env.dev

  customer:
    build:
      dockerfile: Dockerfile
      context: ./customer
    container_name: customer
    ports:
      - "8001:8001"
    restart: always
    # depends_on:
    #   - "mongo-db"
    #   # - "rabbitmq"
    depends_on:
      mongo-db:
        condition: service_healthy
    volumes:
      - .:/app/
      - /app/customer/node_modules
    # env_file:
    #   - ./customer/.env.dev
  nginx-proxy:
    build:
      dockerfile: Dockerfile
      context: ./proxy
    depends_on:
      - product
      - shopping
      - customer
    ports:
      - 80:80
